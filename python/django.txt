pip install virtualenv  
apt-get install default-mysql-server
apt-get install default-mysql-client
为了避免这个问题，可以用'-m pip'调用Python，而不是直接运行pip。
-m pip install pillow（包名）
收集mysqlclient
pip list（查看所有安装的模块）
mysqlclient（mysql模块）
pip uninstall django==1.4.20（卸载）
pip install mysql-connector-python --allow-external安装mysql驱动）
pip install mysql-connector （安装mysql驱动）
pip install mysqlclient
万能键
alt+enter
linux
django-admin startproject one(项目名)
cd one(在项目目录）
./manage.py runserver 0.0.0.0:8000(外网访问）
windows
django-admin startproject one
python manage.py runserver 0.0.0.0:8000
添加应用名称
python manage.py startapp user(用户)
python manage.py startapp goods(商品)
python manage.py startapp order(订单)
python manage.py startapp cart(购物车)
在项目文件INSTALLED_APPS（配置应用）
配置路由(商品优先goods)
path('user/',  apps.user.urls),
path('order/', apps.order.urls),
path('cart/', apps.cart.urls),
path('goods/', apps.goods.urls),
#认证模型
AUTH_USER_MODEL='user.User'
项目文件引入pymysql
import  pymysql
pymysql.install_as_MYSQLdb()
mysql配置
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'django',
        'USER':'ccc01',
        'PASSWORD':'XX',(数据库密码)
        'HOST':'192.168.1.11',
        'PORT':'3306',
    }
}
#页面
1.user
login
register
用户信息
用户订单
用户地址
2.shangpin
首页
列表页
详情页
搜索结果
3.gouwuche
cart购物车
4.dingdan
order提交订单
5.后台
#功能
1.user
register
注册激活
login
个人信息
默认地址
收货地址
浏览记录
编辑收货地址
显示订单
2.shangpin
首页显示商品种类，分类
详情
列表信息分页
商品新品
商品搜索
3.gouwuche
用户购物车信息
购物车信息编辑
详情页加入购物车
4.dingdan
用户商品信息
订单创建
订单支付
5.后台模块
权限
#数据库设计
A用户模块
1.用户表
id 用户名 密码  是否激活 权限
2.地址表
id 邮箱 联系方式 邮编 收货地址 是否默认 用户ID
B商品模块
1.商品sku表
id 名称 简介 价格 单位 库存 销量 图片 状态（是否上架）spuid
2.商品spu表
id 名称 详情
3.商品种类表
id 种类名称 LOGO 图片
4.商品图片表
id 名称 商品skuID
5.首页轮播表
id  skuid 图片 index(顺序)
6.首页促销表
id 图片 url index(顺序)
7.首页分类展示表
id skuid 种类id 展示标识 index(顺序) 
C购物车模块
redis完成
redis历史记录
D订单模块
1.订单信息表
订单ID 地址ID 用户ID 支付方式  运费 总金额  支付状态 创建时间 
2.订单商品表
id 订单ID skuid 商品数量 商品价格 评论
生成数据库
1.生成
python manage.py makemigrations
2.同步
python manage.py migrate
E后台模块
富文本编辑器
pip install django-tinymce==2.6.0(使用需要在设置注册)
static(静态页面前端)
register.html#注册页面
login.html#登录页面
user.html#用户中心页面
user_order#用户订单页
place_order#
cart.html购物车页
order.html#订单页
index.html#首页
list.html#商品列表页
detall.html#详情页
templates（模板文件）
在TEMPLATES  'DIRS'配置静态文件'DIRS': [os.path.join(BASE_DIR,'static')，],
部署
